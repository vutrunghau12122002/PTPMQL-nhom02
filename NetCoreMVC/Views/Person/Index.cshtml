@using X.PagedList;
@using X.PagedList.Mvc.Core; 
@model IEnumerable<NetCoreMVC.Models.Person>


@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
 <p>
    <a asp-action="Create" class="btn btn-success">Create New</a>
    <a class="btn btn-success" asp-action="Download">Download</a>
</p>
@* <form asp-action="DeleteAll">
    <button type="submit" class="btn btn-danger">Xóa tất cả </button>
</form> *@
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Fullname)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Fullname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.PersonId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.PersonId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.PersonId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page=page}),
    new X.PagedList.Web.Common.PagedListRenderOptions { LiElementClasses = new string[] {"page-item"},
    PageClasses = new string[] { "page-link" }})  
